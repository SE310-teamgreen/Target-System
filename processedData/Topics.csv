"ModuleID","TopicText","OrderID"
"78","What is software engineering?","1"
"78","What are the problems with software development and why is it so hard?","2"
"78","Identify the activities associated with software engineering as applied in the development of a software system.","3"
"79","What are design patterns?","1"
"79"," Where do patterns fit on the spectrum from general principles to specific concrete designs?","2"
"79","How are patterns organized and catalogued?","3"
"79","How are patterns described in a way that makes them useful?","4"
"79","How can one apply a pattern in practice?","5"
"80","Defining software quality","1"
"80","Attributes of software quality","2"
"80","Trade-offs and quality","3"
"82","General concept of a software review.","1"
"82","Overview of reviews, walkthroughs and inspections.","2"
"82","Details of formal technical reviews.","3"
"83","Techniques used in formal specification of software requirements.","1"
"83","Analysis and simple formal specification of software requirements.","2"
"83","Benefits of applying formal techniques to the modeling and analysis of software requirements.","3"
"84","Software development models","1"
"84","Basics of software processes","2"
"84","CMM-type processes","3"
"84","Agile processes","4"
"85","Formal inspections","1"
"86","Use Case Concepts and Terms","1"
"86","Developing a Use Case Model","2"
"86","Reviewing a Use Case Model ","3"
"86","Problems with Use Cases","4"
"87","The nature of, and role of professional societies","1"
"87","Accreditation, certification, and licensing","2"
"87","Social, legal, historical, and professional issues and concerns","3"
"87","Codes of ethics and professional conduct","4"
"91","The need for professional standards of conduct","1"
"91","Software Engineering Codes of ethics and professional conduct","2"
"104","Techniques used in informal specification of software requirements.","1"
"104","Analysis and informal specification of software requirements.","2"
"104","Strengths and weaknesses of informal specifications.","3"
"106","Process Fundamentals","1"
"106","PSP Concepts and Structure","2"
"106","PSP Planning and Measurement","3"
"106","PSP Quality Management","4"
"106","PSP Results","5"
"109","Introduction to management","1"
"109","How the transition to management may be made","2"
"109","How organization is used to facilitate management","3"
"109","Types of functions managers perform:  planning, decision making, controlling, and evaluating","4"
"110","Engineering Profession","1"
"110","Accreditation","2"
"110","Certification and Licensing","3"
"110","Professional Practice","4"
"110","Software Engineering Codes of ethics and Professional Conduct","5"
"111","What are design patterns?","1"
"111"," Where do patterns fit on the spectrum from general principles to specific concrete designs?","2"
"111","How are patterns organized and catalogued?","3"
"111","How are patterns described in a way that makes them useful?","4"
"111","How can one apply a pattern in practice?","5"
"115","Testing Fundamentals","1"
"115","Unit Testing Concepts and Techniques","2"
"115","Unit Test Planning","3"
"115","OO Testing","4"
"116","Techniques used in formal specification of software requirements.","1"
"116","Analysis and simple formal specification of software requirements.","2"
"116","Benefits of applying formal techniques to the modeling and analysis of software requirements.","3"
"122","Inspection process","1"
"122","Roles and Responsibilities","2"
"123","software engineering projects","1"
"125","Testing Fundamentals","1"
"125","Unit Testing Concepts and Techniques","2"
"125","Unit Test Planning","3"
"125","OO Testing","4"
"127","Software Quality Attribute Scenarios","1"
"127","Architectural patterns &amp; tactics for acheiving quality","2"
"128","","1"
"129","Extreme Programming","1"
"130","1. Lab activity creating and using storyboards.","1"
"130","2. Discussion of results of the lab.","2"
"130","3. Alternative methods (e.g., interactive storyboards).","3"
"130","4. Moving from storyboards to other representations and methods.","4"
"131","1. Build problem statements interactively with project stakeholders.","1"
"131","2. Compare problem statements to other project artifacts, histories and outcomes.","2"
"131","Make architectural decisions based on high-level priorities expressed in a problem statement.","3"
"133","1. Play a leadership role during project formation and software product concept creation.","1"
"133","2. Play a leadership role during requirements gathering and overall architecture of a system.","2"
"133","3. Play a leadership role during high-level design and early system implementation.","3"
"134","","1"
"135","Documentation standards","1"
"135","Software quality","2"
"135","Accessibility and usability","3"
"135","Verification and validation","4"
"135","Software evolution","5"
"136","Software architecture:  from design to program.","1"
"137","Black box vs. white box testing concepts","1"
"137","Equivalence partitions and boundary values","2"
"137","Path testing","3"
"138","Levels for the design of object-oriented systems","1"
"138","Basic object-oriented design principles","2"
"138","Design principles of coupling and cohesion","3"
"138","Introduction to design patterns","4"
"139","Levels for the design of object-oriented systems","1"
"139","Basic object-oriented design principles","2"
"139","Design principles of coupling and cohesion","3"
"139","Introduction to design patterns","4"
"142","How to establish a programming baseline","1"
"142","How to enhance someone else's software","2"
"142","How to generate defect reports from a user point-of-view","3"
"142","How to take a defect report and maintain someone else's software","4"
"142","How to evaluate your progress from the baseline to the end of the exercises.","5"
"143","Verification &amp; Validation (Definitions, Difference, Where Applied (lifecycle))","1"
"143","Which Artifacts are verified? Which are validated?","2"
"143","Importance of V &amp; V.","3"
"143","Categories: When is it good enough?","4"
"143","Cost of V &amp; V activity.","5"
"144","Introduction to use case template<br>","1"
"144","Use case development (lab exercise)","2"
"145","System use case models ","1"
"145","General use case application principles","2"
"145","Use case refinement","3"
"146","Introduction to use case template<br>","1"
"146","Use case development (lab exercise)","2"
"147","software engineering projects","1"
"148","User-centered design","1"
"148","Overview of usability testing","2"
"148","Roles in usability testing","3"
"148","Planning for usability testing","4"
"148","Selecting participants for usability testing","5"
"148","Designing the materials for usability testing","6"
"148","Conducting usability testing (including hands-on experience)","7"
"148","Follow-up:  Analysis, debriefing, recommendations","8"
"149","Functional requirements","1"
"149","Quality Attributes","2"
"149","Tactics used for achieving Quality Attributes","3"
"149","Software Architectural Styles","4"
"150","Paper prototyping.","1"
"151","User-centered design","1"
"151","Overview of usability testing","2"
"151","Roles in usability testing","3"
"151","Planning for usability testing","4"
"151","Selecting participants for usability testing","5"
"151","Designing the materials for usability testing","6"
"151","Conducting usability testing (including hands-on experience)","7"
"151","Follow-up:  Analysis, debriefing, recommendations","8"
"157","System use case models ","1"
"157","General use case application principles","2"
"157","Use case refinement","3"
"158","Introduction to use case template<br>","1"
"158","Use case development (lab exercise)","2"
"159","Requirements elicitation, specification and user interface design","1"
"160","","1"
"161","software engineering projects","1"
"162","Use cases","1"
"163","Introduction to use case template<br>","1"
"163","Use case development (lab exercise)","2"
"164","System use case models ","1"
"164","General use case application principles","2"
"164","Use case refinement","3"
"165","System use case models ","1"
"165","General use case application principles","2"
"165","Use case refinement","3"
"166","Use cases","1"
"167","OO class design (could also be viewed as domain modeling).","1"
"167","Reading and understanding requirements.","2"
"176","PSP Concepts and Structure","1"
"176","PSP Planning and Measurement","2"
"176","PSP Quality Management","3"
"176","PSP Results","4"
"177","User-centered design","1"
"177","Overview of usability testing","2"
"177","Roles in usability testing","3"
"177","Planning for usability testing","4"
"177","Selecting participants for usability testing","5"
"177","Designing the materials for usability testing","6"
"177","Conducting usability testing (including hands-on experience)","7"
"177","Follow-up:  Analysis, debriefing, recommendations","8"
"178","Documentation standards","1"
"178","Software quality","2"
"178","Accessibility and usability","3"
"178","Verification and validation","4"
"178","Software evolution","5"
"189","automated unit testing","1"
"189","mock objects","2"
"189","Test driven development","3"
